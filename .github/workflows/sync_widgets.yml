name: Sync Widgets
on:
  schedule:
    - cron: '0 23 * * *' # CST: Asia/Shanghai 7:00
  workflow_dispatch:
jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TZ: 'Asia/Shanghai'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install requests
        run: pip install requests
      - name: Install dependencies
        run: pip install packaging
      - name: Sync widgets
        id: sync_script # Add ID to reference this step's outputs
        run: python .github/scripts/sync_widgets.py
      - name: Commit and push changes
        # Only execute this step when script output status is 'updated'
        if: steps.sync_script.outputs.status == 'updated'
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'actions@github.com'
          git add ForwardWidgets.fwd
          git commit -m '自动同步 widgets 版本信息'
          git push
      - name: Telegram Notification
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
          SYNC_STATUS: ${{ steps.sync_script.outputs.status }}
          UPDATED_WIDGETS_INFO: ${{ steps.sync_script.outputs.updated_widgets }}
        run: |
          CURRENT_DATE=$(date +'%Y-%m-%d %H:%M')
          WORKFLOW_NAME="Sync Widgets Workflow"
          PREFIX_MESSAGE="${CURRENT_DATE} ${WORKFLOW_NAME} 自动执行。"

          MESSAGE="" # Initialize message

          if [ "$SYNC_STATUS" == "updated" ]; then
            MESSAGE="ForwardWidgets.fwd 已更新并提交。"
            if [ "$UPDATED_WIDGETS_INFO" != "None" ]; then
              UPDATED_INFO=$(echo "$UPDATED_WIDGETS_INFO" | sed 's/\\n\\n/\n\n/g' | sed 's/\\n/\n/g')
              MESSAGE="${MESSAGE}\n\n更新详情：\n${UPDATED_INFO}"
            fi
          else
            MESSAGE="ForwardWidgets.fwd 同步完成，内容已是最新。"
          fi

          FINAL_MESSAGE="${PREFIX_MESSAGE}\n\n${MESSAGE}"

          # Escape double quotes and newlines in the FINAL_MESSAGE variable for JSON payload
          # Use printf %s to handle potential backslashes correctly before sed
          ESCAPED_MESSAGE=$(printf "%s" "$FINAL_MESSAGE" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')

          # Send the JSON payload to Telegram API
          curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{\"chat_id\": \"${TG_CHAT_ID}\", \"text\": \"${ESCAPED_MESSAGE}\"}"
